
<!-- saved from url=(0040)http://www.uml.org.cn/mxdx/200912233.asp -->
<html><head><meta http-equiv="Content-Type" content="text/html; charset=GBK">

<title>包的设计原则</title>
</head>
  
<body leftmargin="0" topmargin="0" marginwidth="0" marginheight="0">
<table width="95%" border="0" align="center" cellpadding="3" cellspacing="1">
                    <tbody><tr> 
                      <td valign="top" bgcolor="#FFFFFF" class="content">
                        <h3>稳定抽象等价原则</h3>
                        <p><strong>前言</strong></p>
                        <p>本文介绍The Stable Abstractions Principle (SAP)：稳定抽象等价原则。</p>
                        <p><strong>概要</strong></p>
                        <p>&nbsp;&nbsp;&nbsp;&nbsp;Packages that are maximally stable should be maximally 
                          abstract. Instable packages should be concrete. The 
                          abstraction of a package should be in proportion to 
                          its stability.</p>
                        <p>&nbsp;&nbsp;&nbsp;&nbsp;最稳定的包应该是最抽象的包。不稳定的包应该是具体的包。包的抽象程度跟它的稳定性成正比。</p>
                        <p>换成另一个说法是：</p>
                        <p>&nbsp;&nbsp;&nbsp;&nbsp;Stable packages should be abstract packages.</p>
                        <p>&nbsp;&nbsp;&nbsp;&nbsp;稳定的包应该是抽象的包。</p>
                        <p><strong>包的稳定抽象等价原则</strong></p>
                        <p>我们在The Stable Dependencies Principle (SDP) - OO设计的稳定依赖原则 
                          一文中谈到了包的稳定性：不容易改变的包应该具有更好的稳定性。</p>
                        <p>一个包的抽象程度越高，它的稳定性就越高。反之，它的稳定性就越低。一个稳定的包必须是抽象的，反之，不稳定的包必须是具体的。</p>
                        <p>&nbsp;&nbsp;&nbsp;&nbsp;稳定的包的构成</p>
                        <p>抽象类或接口通过子类继承扩展行为，这表示抽象类或接口比它们的子类更具有稳定性。总之，为了构成稳定的包，应该提高包内的抽象类或接口的比率；它们的子类可以放在另一个不稳定的包内，该包依赖上述稳定的包，从而遵循了稳定依赖原则（SDP）。</p>
                        <p>&nbsp;&nbsp;&nbsp;&nbsp;理想的体系结构应该是：</p>
                        <p>不稳定的（容易改变的）包处于上层</p>
                        <p>&nbsp;&nbsp;&nbsp;&nbsp;- 它们是具体的包实现</p>
                        <p>&nbsp;&nbsp;&nbsp;&nbsp;稳定的（不容易改变的）包处于下层</p>
                        <p>&nbsp;&nbsp;&nbsp;&nbsp;- 不容易改变，但容易扩展</p>
                        <p>&nbsp;&nbsp;&nbsp;&nbsp;- 接口比实现（具体的运行代码）在内在特性上更具有稳定性</p>
                        <p><img src="./包的设计原则_files/ShowImageded.gif"></p>
                        <p>图1：遵循稳定依赖原则（SDP）的理想的体系结构</p>
                        <p>&nbsp;&nbsp;&nbsp;&nbsp;<strong>小结</strong></p>
                        <p>&nbsp;&nbsp;&nbsp;&nbsp;稳定抽象等价原则（SAP）为我们解决包之间的关系耦合问题。在设计包结构时，稳定的包应该是抽象的（由抽象类或接口构成），不稳定的包应该是具体的（由具体的实现类构成）。</p>
                        <p><strong>参考资料</strong></p>
                        <p><a href="http://www.objectmentor.com/resources/articles/Principles_and_Patterns.pdf" target="blank" class="content_a">Principles 
                          and Patterns</a><img border="0" src="./包的设计原则_files/edit_arrow6.gif"> 
                          by Robert C. Martin。</p>
                        <p>&nbsp;&nbsp;&nbsp;&nbsp;<a href="http://www.objectmentor.com/resources/articles/stability.pdf" target="blank" class="content_a"> 
                          Principles and Patterns</a><img border="0" src="./包的设计原则_files/edit_arrow6.gif"> 
                        </p>
                        </td></tr>
                    </tbody></table>
</body></html>